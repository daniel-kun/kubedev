
testDeploymentConfig = {
    "name": "foo-service",
    "description": "This is a sample service generated by kubedev.",
    "imagePullSecrets": "foo-creds",
    "imageRegistry": "foo-registry",
    "securityChecks": {
      "polaris": {
        "configFile": "polaris-config-cli-v${POLARIS_CONFIG_VERSION_LOCAL}.yaml",
        "configDownload": {
          "url": "https://url-to-your/polaris-config-v${POLARIS_CONFIG_VERSION}.yaml",
          "headers": {
            "Authentication": "Bearer ${YOUR_BEARER_TOKEN}"
          }
        }
      }
    },
    "required-envs": {
        "FOO_SERVICE_GLOBAL_ENV1": {
            "documentation": "Test env var #1 (global)"
        },
        "FOO_SERVICE_GLOBAL_ENV2": {
            "documentation": "Test env var #1 (global)",
            "build": True,
            "container": False
        },
    },
    "deployments": {
        "foo-deploy": {
            "ports": {
                "http": {
                    "container": "8081",
                    "service": "8082",
                    "dev": "8083"
                },
                "https": {
                    "container": "8443",
                    "service": "8543",
                    "dev": "8643"
                },
            },
            "volumes": {
              "dev": {
                "output_docker": "/test/output"
              }
            },
            "required-envs": {
                "FOO_SERVICE_DEPLOY_ENV1": {
                    "documentation": "Test env var #1"
                },
                "FOO_SERVICE_DEPLOY_ENV2": {
                    "documentation": "Test env var #2",
                    "container": True
                },
                "FOO_SERVICE_DEPLOY_ENV3": {
                    "build": True,
                    "container": False
                }
            },
            "systemTest": {
                "variables": {
                    "FOO_DEPLOY_TEST_X": "X",
                    "FOO_DEPLOY_TEST_Y": "Y"
                },
                "testContainer": {
                    "buildArgs": {
                        "FOO_DEPLOY_TESTBUILD_A": "a"
                    },
                    "variables": {
                        "FOO_DEPLOY_TEST_Z": "Z"
                    },
                },
                "services": {
                    "{foo-deploy}": {
                        "hostname": "foo-deploy-test",
                        "ports": [1234],
                        "variables": {
                            "FOO_SERVICE_DEPLOY_ENV1": "fixed-value"
                        }
                    },
                    "postgres:13": {
                        "hostname": "postgres-test",
                        "ports": [5432],
                        "variables": {
                            "POSTGRES_USER": "tempuser",
                            "POSTGRES_PASSWORD": "correct horse battery staple"
                        }
                    }
                }
            }
        }
    }
}

testMultiDeploymentsConfig = {
    "name": "foo-service",
    "description": "This is a sample service generated by kubedev.",
    "imagePullSecrets": "foo-creds",
    "imageRegistry": "foo-registry",
    "required-envs": {
        "FOO_SERVICE_GLOBAL_ENV1": {
            "documentation": "Test env var #1 (global)",
            "build": False
        },
        "FOO_SERVICE_GLOBAL_ENV2": {
            "documentation": "Test env var #2 (global)"
        },
    },
    "deployments": {
        "foo-deploy": {
            "ports": {
                "http": {
                    "container": "8081",
                    "service": "8082",
                    "dev": "8083"
                },
                "https": {
                    "container": "8443",
                    "service": "8543",
                    "dev": "8643"
                },
            },
            "required-envs": {
                "FOO_SERVICE_DEPLOY_ENV1": {
                    "documentation": "Test env var #1, service 'foo-deploy'"
                },
                "FOO_SERVICE_DEPLOY_ENV2": {
                    "documentation": "Test env var #2, service 'foo-deploy'",
                    "build": False
                }
            }
        },
        "bar-deploy": {
            "ports": {
                "http": {
                    "container": "3081",
                    "service": "3082",
                    "dev": "3083"
                },
                "https": {
                    "container": "3443",
                    "service": "3543",
                    "dev": "3643"
                },
            },
            "required-envs": {
                "BAR_SERVICE_DEPLOY_ENV1": {
                    "documentation": "Test env var #1, service 'bar-deploy'",
                    "build": False
                },
                "BAR_SERVICE_DEPLOY_ENV2": {
                    "documentation": "Test env var #2, service 'bar-deploy'"
                }
            }
        }
    }
}

testMixedSubProjectsConfig = {
    "name": "foo-service",
    "description": "This is a sample service generated by kubedev.",
    "imagePullSecrets": "foo-creds",
    "imageRegistry": "foo-registry",
    "required-envs": {
        "FOO_SERVICE_GLOBAL_ENV1": {
            "documentation": "Test env var #1 (global)",
            "build": False
        },
        "FOO_SERVICE_GLOBAL_ENV2": {
            "documentation": "Test env var #2 (global)"
        },
    },
    "deployments": {
        "foo-deploy": {
            "ports": {
                "http": {
                    "container": "8081",
                    "service": "8082",
                    "dev": "8083"
                },
                "https": {
                    "container": "8443",
                    "service": "8543",
                    "dev": "8643"
                },
            },
            "required-envs": {
                "FOO_SERVICE_DEPLOY_ENV1": {
                    "documentation": "Test env var #1, service 'foo-deploy'"
                },
                "FOO_SERVICE_DEPLOY_ENV2": {
                    "documentation": "Test env var #2, service 'foo-deploy'",
                    "build": False
                }
            }
        },
        "bar-deploy": {
            "ports": {
                "http": {
                    "container": "3081",
                    "service": "3082",
                    "dev": "3083"
                },
                "https": {
                    "container": "3443",
                    "service": "3543",
                    "dev": "3643"
                },
            },
            "required-envs": {
                "BAR_SERVICE_DEPLOY_ENV1": {
                    "documentation": "Test env var #1, service 'bar-deploy'",
                    "build": False
                },
                "BAR_SERVICE_DEPLOY_ENV2": {
                    "documentation": "Test env var #2, service 'bar-deploy'"
                }
            }
        }
    },
    "cronjobs": {
      # TODO
    }
}
